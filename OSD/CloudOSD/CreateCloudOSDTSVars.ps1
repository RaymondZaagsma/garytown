<# GARY BLOK - @GWBLOK - Recast Software
This Script will: 
Pre-populate the Unattend that is automatically generated by ConfigMgr's OSD "Apply OS Image" Step.
 - Add Command to support OSDCloud
Create TS Variables required for the following steps to still work without the "Apply OS Image" Step
 - Apply Windows Settings
 - Apply Network Settings
 - Setup Windows and Configuration Manager
 
TS Variables Created:
 - OSArchitecture
 - OSDAnswerFilePath
 - OSDInstallType
 - OSDTargetSystemRoot
 - OSVersionNumber
 - OSDTargetSystemDrive
 - OSDTargetSystemPartition
 
#>
#region: CMTraceLog Function formats logging in CMTrace style
Function Write-CMTraceLog {
         [CmdletBinding()]
    Param (
		    [Parameter(Mandatory=$false)]
		    $Message,
 
		    [Parameter(Mandatory=$false)]
		    $ErrorMessage,
 
		    [Parameter(Mandatory=$false)]
		    $Component = "CloudOSD",
 
		    [Parameter(Mandatory=$false)]
		    [int]$Type,
		
		    [Parameter(Mandatory=$false)]
		    $LogFile = "$LogFolder\CloudOSD.log"
	    )
    <#
    Type: 1 = Normal, 2 = Warning (yellow), 3 = Error (red)
    #>
	    $Time = Get-Date -Format "HH:mm:ss.ffffff"
	    $Date = Get-Date -Format "MM-dd-yyyy"
 
	    if ($ErrorMessage -ne $null) {$Type = 3}
	    if ($Component -eq $null) {$Component = " "}
	    if ($Type -eq $null) {$Type = 1}
 
	    $LogMessage = "<![LOG[$Message $ErrorMessage" + "]LOG]!><time=`"$Time`" date=`"$Date`" component=`"$Component`" context=`"`" type=`"$Type`" thread=`"`" file=`"`">"
	    $LogMessage | Out-File -Append -Encoding UTF8 -FilePath $LogFile
    }

# Configuration ##################################################################

try {
$tsenv = new-object -comobject Microsoft.SMS.TSEnvironment
$SMSTSLogsPath = $tsenv.value('_SMSTSLogPath')
$LogFolder = $tsenv.value('LogFolder')
if (!($LogFolder)){$LogFolder = $SMSTSLogsPath}
    }
catch{
Write-Output "Not in TS"
if (!($LogFolder)){$LogFolder = $env:TEMP}
    }
if (!(Test-Path -path $LogFolder)){$Null = new-item -Path $LogFolder -ItemType Directory -Force}

$ScriptVer = "2022.02.22.1"
$Component = "TSVars"
$LogFile = "$LogFolder\CloudOSD.log"

Write-Output "Starting script to create unattend file & create TS Varaibles"
Write-CMTraceLog -Message "=====================================================" -Type 1
Write-CMTraceLog -Message "TS Variables & Unattend.XML creation: Script version $ScriptVer..." -Type 1
Write-CMTraceLog -Message "=====================================================" -Type 1
Write-CMTraceLog -Message "Running Script as $env:USERNAME" -Type 1 


if ($tsenv){
Write-Output "Creating OSArchitecture | Set to X64"
Write-CMTraceLog -Message "Creating OSArchitecture | Set to X64" -Type 1 
$tsenv.value('OSArchitecture') = "X64"

Write-Output "Creating OSDAnswerFilePath | Set to C:\WINDOWS\panther\unattend\unattend.xml"
Write-CMTraceLog -Message "Creating OSDAnswerFilePath | Set to C:\WINDOWS\panther\unattend\unattend.xml" -Type 1
$tsenv.value('OSDAnswerFilePath') = "C:\WINDOWS\panther\unattend\unattend.xml"

Write-Output "Creating OSDInstallType | Set to Sysprep"
Write-CMTraceLog -Message "Creating OSDInstallType | Set to Sysprep" -Type 1
$tsenv.value('OSDInstallType') = "Sysprep"

Write-Output "Creating OSDTargetSystemRoot | Set to C:\WINDOWS"
Write-CMTraceLog -Message "Creating OSDTargetSystemRoot | Set to C:\WINDOWS" -Type 1
$tsenv.value('OSDTargetSystemRoot') = "C:\WINDOWS"

Write-Output "Creating OSVersionNumber | Set to 10.0"
Write-CMTraceLog -Message "Creating OSVersionNumber | Set to 10.0" -Type 1 
$tsenv.value('OSVersionNumber') = "10.0"

Write-Output "Creating OSDTargetSystemDrive | Set to C:"
Write-CMTraceLog -Message "Creating OSDTargetSystemDrive | Set to C:" -Type 1 
$tsenv.value('OSDTargetSystemDrive') = "C:"

Write-Output "Creating OSDTargetSystemPartition | Set to 0-3"
Write-CMTraceLog -Message "Creating OSDTargetSystemPartition | Set to 0-3" -Type 1 
$tsenv.value('OSDTargetSystemPartition') = "0-3" #Assume Disk 0, 3rd Partition, which is MS Standard, which OSDCloud Format Process follows. 
}

